{"ast":null,"code":"import _toConsumableArray from\"C:/Users/tuu18/Documents/csc309/team63/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/tuu18/Documents/csc309/team63/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import ExploreView from'../../components/ExploreView';import\"./styles.css\";import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PersonalizedFeed(props){//A get request will be made to the server to get any notifications for the current user\n//A get request will be made to the server to get works that may interest them\n//A get request will be made to the server to get the works they liked\nvar defaultNotifications=[{title:\"Features\",color:\"#752d76\",notifications:[{content:\"Your work Pain is featured in Iconology!\",linkPath:\"/Features\"}]},{title:\"Comments\",color:\"#962fcb\",notifications:[{content:\"User102 commented on your Pain post\",linkPath:\"/Coverpage\"},{content:\"User103 commented on your Pain post\",linkPath:\"/Coverpage\"},{content:\"User104 commented on your Pain post\",linkPath:\"/Coverpage\"},{content:\"User105 commented on your Pain post\",linkPath:\"/Coverpage\"},{content:\"User106 commented on your Pain post\",linkPath:\"/Coverpage\"}]},{title:\"Likes\",color:\"rgb(177 72 153)\",notifications:[{content:\"User983 liked your pain post\",linkPath:\"/Coverpage\"},{content:\"User693 liked your pain post\",linkPath:\"/Coverpage\"}]},{title:\"Followings\",color:\"#854ab9\",notifications:[{content:\"User102 started following you\",linkPath:\"/Profile\"},{content:\"User103 started following you\",linkPath:\"/Profile\"},{content:\"User105 started following you\",linkPath:\"/Profile\"}]}];var _useState=useState(defaultNotifications),_useState2=_slicedToArray(_useState,2),notifications=_useState2[0],setNotifications=_useState2[1];var handleClear=function handleClear(idx){//a delete request will be made to the database to remove all notifications of the specified type\nvar newNotifications=_toConsumableArray(notifications);newNotifications[idx].notifications=[];setNotifications(newNotifications);};var generateNotifications=function generateNotifications(title,color,notifications,idx){return/*#__PURE__*/_jsxs(\"div\",{className:\"notifications\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"notifications-header\",style:{backgroundColor:color},children:[title,/*#__PURE__*/_jsx(\"button\",{className:\"box-btn notifications-btn\",onClick:function onClick(){handleClear(idx);},children:\"Clear\"})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"notifications-list\",children:notifications.map(function(notification,id){return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"p\",{children:notification.content},id),/*#__PURE__*/_jsx(Link,{to:notification.linkPath,className:\"arrow-link\",children:\">\"},id+notification.content)]},id);})})]},idx);};return/*#__PURE__*/_jsxs(\"div\",{className:\"personalized-feed\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"large-dark-box notifications-box\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"box-title\",children:\"Notifications\"}),/*#__PURE__*/_jsx(\"div\",{className:\"notifications-wrapper\",children:notifications.map(function(notificationItems,idx){return generateNotifications(notificationItems.title,notificationItems.color,notificationItems.notifications,idx);})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(ExploreView,{works:props.works.slice(3,6),title:\"Works That May Interest You\"}),/*#__PURE__*/_jsx(ExploreView,{works:props.works.slice(1,2),title:\"Liked Works\"})]});}export default PersonalizedFeed;","map":{"version":3,"sources":["C:/Users/tuu18/Documents/csc309/team63/client/src/pages/PersonalizedFeed/index.js"],"names":["React","useState","ExploreView","Link","PersonalizedFeed","props","defaultNotifications","title","color","notifications","content","linkPath","setNotifications","handleClear","idx","newNotifications","generateNotifications","backgroundColor","map","notification","id","notificationItems","works","slice"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ExploreView from '../../components/ExploreView';\nimport PropTypes from 'prop-types';\nimport \"./styles.css\";\nimport { Link } from 'react-router-dom';\n\n\nfunction PersonalizedFeed (props) {\n \n   //A get request will be made to the server to get any notifications for the current user\n   //A get request will be made to the server to get works that may interest them\n   //A get request will be made to the server to get the works they liked\n\n   const defaultNotifications = [\n        {\n            title: \"Features\",\n            color: \"#752d76\",\n            notifications: [\n                {\n                    content: \"Your work Pain is featured in Iconology!\",\n                    linkPath: \"/Features\"\n                }\n            ]\n        },\n        {\n            title: \"Comments\",\n            color: \"#962fcb\",\n            notifications: [\n                {\n                    content: \"User102 commented on your Pain post\",\n                    linkPath: \"/Coverpage\"\n                },\n                {\n                    content: \"User103 commented on your Pain post\",\n                    linkPath: \"/Coverpage\"\n                },\n                {\n                    content: \"User104 commented on your Pain post\",\n                    linkPath: \"/Coverpage\"\n                },\n                {\n                    content: \"User105 commented on your Pain post\",\n                    linkPath: \"/Coverpage\"\n                },\n                {\n                    content: \"User106 commented on your Pain post\",\n                    linkPath: \"/Coverpage\"\n                }\n            ]\n        },\n        {\n            title: \"Likes\",\n            color: \"rgb(177 72 153)\",\n            notifications: [\n                {\n                    content: \"User983 liked your pain post\",\n                    linkPath: \"/Coverpage\"\n                },\n                {\n                    content: \"User693 liked your pain post\",\n                    linkPath: \"/Coverpage\"\n                }\n            ]\n        },\n        {\n            title: \"Followings\",\n            color: \"#854ab9\",\n            notifications: [\n                {\n                    content: \"User102 started following you\",\n                    linkPath: \"/Profile\"\n                },\n                {\n                    content: \"User103 started following you\",\n                    linkPath: \"/Profile\"\n                },\n                {\n                    content: \"User105 started following you\",\n                    linkPath: \"/Profile\"\n                }\n            ]\n        } \n    ];\n\n    const [notifications, setNotifications] = useState(defaultNotifications);\n\n    const handleClear = (idx) => {\n        //a delete request will be made to the database to remove all notifications of the specified type\n        let newNotifications = [...notifications];\n        newNotifications[idx].notifications = [];\n        setNotifications(newNotifications);\n    }\n\n    const generateNotifications = (title, color, notifications, idx) => {\n        return (\n            \n                <div key={idx} className=\"notifications\">\n                    <h3 className=\"notifications-header\" style={{backgroundColor: color}}>\n                        {title}\n                        <button className=\"box-btn notifications-btn\"\n                            onClick={() =>{handleClear(idx)}}>\n                                Clear\n                        </button>\n                    </h3>\n                    <ul className=\"notifications-list\">\n                        {\n                            notifications.map((notification, id) => {\n                                return(\n                                    <li key={id}>\n                                        <p key={id}>{notification.content}</p> \n                                        <Link key={id+notification.content} to={notification.linkPath}className=\"arrow-link\">{\">\"}</Link>\n                                    </li>\n                                );\n                            })\n                        }\n                    </ul>\n                </div>\n\n        );\n    };\n\n\n    return (\n        <div className=\"personalized-feed\">\n            <div className=\"large-dark-box notifications-box\">\n                <h3 className=\"box-title\">Notifications</h3>\n                {   \n                    <div className=\"notifications-wrapper\">\n                        {notifications.map((notificationItems, idx) => {\n                            return (\n                                generateNotifications(notificationItems.title, notificationItems.color, notificationItems.notifications, idx)\n                            );\n                        })}\n                    </div>\n                }       \n            </div>\n            <br/>\n            \n            <ExploreView works={props.works.slice(3,6)} title={\"Works That May Interest You\"}/>\n            <ExploreView works={props.works.slice(1,2)} title={\"Liked Works\"}/>\n        </div>\n        \n    );\n}\n\nPersonalizedFeed.propTypes = {\n    works: PropTypes.array\n}\n\nexport default PersonalizedFeed;\n"]},"metadata":{},"sourceType":"module"}